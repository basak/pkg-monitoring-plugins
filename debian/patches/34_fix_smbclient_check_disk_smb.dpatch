#! /bin/sh /usr/share/dpatch/dpatch-run
## 34_fix_smbclient_check_disk_smb.dpatch by Jan Wagner <waja@cyconet.org>
## patch provided by Stephane Chazelas <stephane@artesyncp.com>
##
## DP: Fixes use of smbclient

@DPATCH@
diff -urNad nagios-plugins-1.4.12~/plugins-scripts/check_disk_smb.pl nagios-plugins-1.4.12/plugins-scripts/check_disk_smb.pl
--- nagios-plugins-1.4.12~/plugins-scripts/check_disk_smb.pl	2008-06-06 12:19:16.000000000 +0200
+++ nagios-plugins-1.4.12/plugins-scripts/check_disk_smb.pl	2008-06-06 12:19:16.000000000 +0200
@@ -26,17 +26,13 @@
 use vars qw($opt_P $opt_V $opt_h $opt_H $opt_s $opt_W $opt_u $opt_p $opt_w $opt_c $opt_a $verbose);
 use vars qw($PROGNAME);
 use lib utils.pm ;
-use utils qw($TIMEOUT %ERRORS &print_revision &support &usage);
+use utils qw($TIMEOUT %ERRORS &print_revision &support &usage &output_and_error_of);
 
 sub print_help ();
 sub print_usage ();
 
 $PROGNAME = "check_disk_smb";
 
-$ENV{'PATH'}='';
-$ENV{'BASH_ENV'}=''; 
-$ENV{'ENV'}='';
-
 Getopt::Long::Configure('bundling');
 GetOptions
 	("v"   => \$verbose, "verbose"    => \$verbose,
@@ -59,9 +55,7 @@
 
 if ($opt_h) {print_help(); exit $ERRORS{'OK'};}
 
-my $smbclient= "$utils::PATH_TO_SMBCLIENT " ;
-my $smbclientoptions= $opt_P ? "-p $opt_P " : "";
-
+my $smbclient = $utils::PATH_TO_SMBCLIENT;
 
 # Options checking
 
diff -urNad nagios-plugins-1.4.12~/plugins-scripts/utils.pm.in nagios-plugins-1.4.12/plugins-scripts/utils.pm.in
--- nagios-plugins-1.4.12~/plugins-scripts/utils.pm.in	2007-07-07 13:55:48.000000000 +0200
+++ nagios-plugins-1.4.12/plugins-scripts/utils.pm.in	2008-06-06 12:21:06.000000000 +0200
@@ -8,7 +8,8 @@
 
 require Exporter;
 @ISA = qw(Exporter);
-@EXPORT_OK = qw($TIMEOUT %ERRORS &print_revision &support &usage);
+@EXPORT_OK = qw($TIMEOUT %ERRORS &print_revision &support &usage
+		&output_of &output_and_error_of);
 
 #use strict;
 #use vars($TIMEOUT %ERRORS);
@@ -67,4 +68,29 @@
 	}
 }
 
+sub output_of {
+	local *CMD;
+	local $/ = undef;
+	if (open CMD, "-|", @_) {
+		return <CMD>;
+		close CMD;
+	}
+	return undef;
+}
+
+sub output_and_error_of {
+	local *CMD;
+	local $/ = undef;
+	my $pid = open CMD, "-|";
+	if (defined($pid)) {
+		if ($pid) {
+			return <CMD>;
+		} else {
+			open STDERR, ">&STDOUT" and exec @_;
+			exit(1);
+		}
+	}
+	return undef;
+}
+
 1;
