#! /bin/sh /usr/share/dpatch/dpatch-run
## 11_check_ntp_revert_n-p_coverty_fix.dpatch by Jan Wagner <waja@cyconet.org>
From 5871123e0a5f520f810b2cfe03cef16c4c5a1aee Mon Sep 17 00:00:00 2001
From: Holger Weiss <holger@zedat.fu-berlin.de>
Date: Sun, 30 Nov 2014 23:39:59 +0100
Subject: [PATCH] Revert "plugins/check_ntp.c - Verify struct from response"
Origin: upstream, https://github.com/monitoring-plugins/monitoring-plugins/commit/5871123e0a5f520f810b2cfe03cef16c4c5a1aee.patch

This reverts commit a04df3e1b67dc5eab3adc202cc89901f801cdeaa.  The "fix"
was bogus in many ways and broke jitter checking.

@DPATCH@

Conflicts:
	plugins/check_ntp.c
---
 plugins/check_ntp.c | 13 ++-----------
 1 file changed, 2 insertions(+), 11 deletions(-)

diff --git a/plugins/check_ntp.c b/plugins/check_ntp.c
index 546802a..0a7640a 100644
--- a/plugins/check_ntp.c
+++ b/plugins/check_ntp.c
@@ -517,14 +517,13 @@ setup_control_request(ntp_control_message *p, uint8_t opcode, uint16_t seq){
 double jitter_request(const char *host, int *status){
 	int conn=-1, i, npeers=0, num_candidates=0, syncsource_found=0;
 	int run=0, min_peer_sel=PEER_INCLUDED, num_selected=0, num_valid=0;
-	int peers_size=0, peer_offset=0, bytes_read=0;
+	int peers_size=0, peer_offset=0;
 	ntp_assoc_status_pair *peers=NULL;
 	ntp_control_message req;
 	const char *getvar = "jitter";
 	double rval = 0.0, jitter = -1.0;
 	char *startofvalue=NULL, *nptr=NULL;
 	void *tmp;
-	int ntp_cm_ints = sizeof(uint16_t) * 5 + sizeof(uint8_t) * 2;
 
 	/* Long-winded explanation:
 	 * Getting the jitter requires a number of steps:
@@ -609,15 +608,7 @@ double jitter_request(const char *host, int *status){
 
 				req.count = htons(MAX_CM_SIZE);
 				DBG(printf("recieving READVAR response...\n"));
-
-				/* cov-66524 - req.data not null terminated before usage. Also covers verifying struct was returned correctly*/
-				if ((bytes_read = read(conn, &req, SIZEOF_NTPCM(req))) == -1)
-					die(STATE_UNKNOWN, _("Cannot read from socket: %s"), strerror(errno));
-				if (bytes_read != ntp_cm_ints + req.count)
-					die(STATE_UNKNOWN, _("Invalid NTP response: %d bytes read does not equal %d plus %d data segment"), bytes_read, ntp_cm_ints, req.count); 
-				/* else null terminate */
-				req.data[req.count] = '\0';
-
+				read(conn, &req, SIZEOF_NTPCM(req));
 				DBG(print_ntp_control_message(&req));
 
 				if(req.op&REM_ERROR && strstr(getvar, "jitter")) {
